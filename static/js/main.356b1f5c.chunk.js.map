{"version":3,"sources":["images/dicesm.jpg","components/Home.js","components/Question.js","components/TableStats.js","components/Data.js","components/Calculate.js","components/dice/Excel.js","components/dice/Tables.js","components/Dice.js","components/about/SectionOne.js","components/about/SectionTwo.js","components/about/SectionThree.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cardStyle","width","justifyContent","boxShadow","Home","className","Card","style","Body","class","to","Button","variant","React","Component","faStyleDice","fontSize","color","Question","prob","probability","sum","i","j","count_6","count_total","toFixed","console","log","push","dice1","dice2","TableStats","props","Table","striped","bordered","hover","responsive","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","counter2","counter3","counter4","counter5","counter6","counter7","counter8","counter9","counter10","counter11","counter12","six2","six3","six4","six5","six6","six7","six8","six9","six10","six11","six12","prob2","prob3","prob4","prob5","prob6","prob7","prob8","prob9","prob10","prob11","prob12","RandSumRolls","Data","chartRef","createRef","state","value","output","roll","label","data","labels","datasets","buttonRollHundredHandler","setState","currRoll","buttonRollThouHandler","buttonRollTenThousHandler","this","Math","floor","random","SumofDice","myChartRef","current","getContext","Chart","type","backgroundColor","borderColor","options","repsonsive","tooltips","enabled","scales","yAxes","ticks","min","max","stepSize","beginAtZero","scaleLabel","display","labelString","xAxes","title","text","Container","Row","Col","height","id","ref","onClick","block","Calculate","Excel","caption","headingOne","headingTwo","one","thirteen","fourteen","Tables","Dice","lg","SectionOne","faStyleDiceSix","SectionTwo","faStyleJS","faStyleReact","faStyleHtml","faStyleCSS","SectionThree","About","App","exact","from","component","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.356b1f5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dicesm.3278a4d7.jpg\";","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\",\r\n    \r\n  }\r\n  \r\nclass Home extends React.Component{\r\n  render(){\r\n      return(\r\n          <div className = \"Title\">\r\n            <Card style = {cardStyle}>\r\n              <Card.Body>\r\n                  <p><i class=\"fa fa-grav fa-5x\"></i></p>\r\n                  <p className = \"lead\"><strong>Statistics and Probability</strong></p>\r\n                  <p className = \"lead\">Math 352</p>\r\n                  <p className = \"lead\">Spring 2020</p>\r\n                  <hr></hr>\r\n                  <p className = \"lead\">Daniel Ramirez</p>\r\n                  <p className = \"lead\">Juan Zarate</p>\r\n                  <p className = \"lead\">Salvador Salgado</p>\r\n                  <hr></hr>\r\n                  <Link to = \"/dice\"><Button variant = \"primary mr-4\">Project</Button></Link>\r\n                  <Link to = \"/about\"><Button variant = \"secondary\">About</Button></Link>\r\n                  \r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\"}\r\n    const faStyleDice = {fontSize: \"4em\", color: \"crimson\"}\r\nfunction Question(){\r\n    return(\r\n        <div className = \"Question\" >\r\n            <Card style = {cardStyle}>\r\n                <Card.Body>\r\n                    <h3>Project</h3>\r\n                    <p className = \"lead\">\r\n                    <strong>Question: </strong> \r\n                    What is the probability that at least \r\n                    one pair  of fair Dice lands on 6,\r\n                    given that the sum of the Dice is \r\n                    i, i = 2, 3, …, 12?\r\n                    </p>\r\n                    <p><i style={faStyleDice} className=\"fas fa-dice mb-4\"></i></p>\r\n                    <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","import React from 'react';\r\nimport {Card, Table} from 'react-bootstrap';\r\nlet prob = [];\r\nfunction probability(sum) {\r\n    let i = 1, j = 1;\r\n    let count_6 = 0;\r\n    let count_total = 0;\r\n      if (sum < 6 || sum > 12) {return 0}\r\n    \r\n        for(i = 1; i <= 6; i++) \r\n        {\r\n          for(j = 1; j<= 6; j++) {\r\n            if(i+j == sum) {\r\n              count_total++;\r\n            if (i == 6 || j == 6) {\r\n              count_6++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n    if(count_6 == 0){\r\n    return 0;   \r\n     }\r\n     return count_6/count_total.toFixed(3);\r\n     \r\n    }\r\n      for(let i = 2; i <= 12; i++) {\r\n     \r\n      console.log(\" when sum is\" + i + \" is:\"+ probability(i).toFixed(3));\r\n      prob.push(probability(i).toFixed(3));\r\n    }\r\n\r\nconsole.log(prob);\r\n\r\nconst TableStats = (props) =>\r\n{\r\n    return(\r\n        <div className = \"table\">\r\n                    <h3>Table</h3>\r\n                        <Table striped bordered hover responsive >\r\n                               <caption>Expected versus Experimental Values</caption>\r\n                            <thead> \r\n                                <tr>\r\n                                    <th>Sum</th>\r\n                                    <th>Expected</th>\r\n                                    <th>Experimental</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>2</td>\r\n                                    <td>{prob[0]}</td>\r\n                                    <td>{props.two}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>{prob[1]}</td>\r\n                                    <td>{props.three}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>4</td>\r\n                                    <td>{prob[2]}</td>\r\n                                    <td>{props.four}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>5</td>\r\n                                    <td>{prob[3]}</td>\r\n                                    <td>{props.five}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>6</td>\r\n                                    <td>{prob[4]}</td>\r\n                                    <td>{props.six}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>7</td>\r\n                                    <td>{prob[5]}</td>\r\n                                    <td>{props.seven}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>8</td>\r\n                                    <td>{prob[6]}</td>\r\n                                    <td>{props.eight}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>9</td>\r\n                                    <td>{prob[7]}</td>\r\n                                    <td>{props.nine}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>10</td>\r\n                                    <td>{prob[8]}</td>\r\n                                    <td>{props.ten}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>11</td>\r\n                                    <td>{prob[9]}</td>\r\n                                    <td>{props.eleven}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>12</td>\r\n                                    <td>{prob[10]}</td>\r\n                                    <td>{props.twelve}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n        </div>\r\n    )\r\n}\r\nexport default TableStats","// Calculations will go here\r\nimport React from 'react';\r\nimport { Button, Col, Row, Container} from 'react-bootstrap';\r\nimport Chart from \"chart.js\";\r\n//import Sum from './Sum';\r\n\r\n    \r\nimport TableStats from './TableStats';\r\n\r\n\r\nlet counter2=0;\r\nlet counter3=0;\r\nlet counter4=0;\r\nlet counter5=0;\r\nlet counter6=0;\r\nlet counter7=0;\r\nlet counter8=0;\r\nlet counter9=0;\r\nlet counter10=0;\r\nlet counter11=0;\r\nlet counter12=0;\r\n\r\nlet six2 =0;\r\nlet six3 =0;\r\nlet six4 =0;\r\nlet six5 =0;\r\nlet six6 = 0;\r\nlet six7=0;\r\nlet six8 =0;\r\nlet six9 =0;\r\nlet six10 =0;\r\nlet six11 =0;\r\nlet six12 =0;\r\n\r\nlet prob2 =0;\r\nlet prob3 =0;\r\nlet prob4 = 0;\r\nlet prob5 = 0;\r\nlet prob6 =0;\r\nlet prob7 =0;\r\nlet prob8 =0;\r\nlet prob9 = 0;\r\nlet prob10 = 0;\r\nlet prob11 =0;\r\nlet prob12 = 0;\r\n\r\nlet dice1 ;\r\nlet dice2;\r\n\r\nlet RandSumRolls = [];\r\n    \r\n\r\nclass Data extends React.Component{\r\n  \r\n  \r\n  \r\n    chartRef = React.createRef();\r\n    state = {\r\n        value: 1,\r\n        probability: 1,\r\n        output:1,\r\n        roll:10,\r\n        chartRef:null,\r\n        label:\"Expected\",\r\n        data: {\r\n                labels: [\"1\",\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\r\n                datasets:{   \r\n                            data: [1,2,3,4,5,6,7,8,9],\r\n                        }},\r\n    }\r\nbuttonRollHundredHandler = () =>{\r\n  this.setState({roll:100});\r\n  let currRoll = this.state.roll;\r\n  console.log(\"roll: \" + currRoll);\r\n  console.log(this.state.roll);\r\n\r\n}\r\n\r\nbuttonRollThouHandler = () =>{\r\n  this.setState({roll:1000});\r\n  console.log(this.state.roll);\r\n}\r\n\r\nbuttonRollTenThousHandler = () =>{\r\nthis.setState({roll:10000});\r\nconsole.log(this.state.roll);\r\n\r\n\r\n}\r\ncomponentDidUpdate() {\r\n\r\nconsole.log(this.state.roll);\r\n//-----------------------------------------------------\r\n\r\n\r\nfor(let i = 0; i < this.state.roll; i++){\r\n dice1 = Math.floor((Math.random()*6)+1);\r\n  dice2 = Math.floor((Math.random()*6)+1);\r\n\r\nlet SumofDice = dice1 + dice2;\r\n\r\nRandSumRolls.push(SumofDice);\r\n\r\n\r\nif(SumofDice >=2 && SumofDice < 13){\r\n  if(SumofDice ===2){\r\n      counter2++;\r\n      if(dice1 ===6 || dice2 ===6){\r\n          six2++;\r\n      }\r\n      prob2 = six2/counter2;\r\n  }\r\n  if(SumofDice ===3){\r\n      counter3++;\r\n      if(dice1 ===6 || dice2 ===6){\r\n          six3++;\r\n      }\r\n      prob3 = six3/counter3;\r\n  }\r\n  if(SumofDice === 4){\r\n      counter4++;\r\n      if(dice1 ===6 || dice2 ===6){\r\n          six4++;\r\n      }\r\n      prob4 = six4/counter4;\r\n  }\r\n  if(SumofDice ===5){\r\n      counter5++;\r\n      if(dice1 ===6 || dice2 === 6){\r\n          six5++;\r\n      }\r\n      prob5 = six5/counter5;\r\n  }\r\n  if(SumofDice ===6){\r\n    counter6++;\r\n    if(dice1 ===6 || dice2 === 6){\r\n        six6++;\r\n    }\r\n    prob6 = six6/counter6;\r\n}\r\nif(SumofDice === 7){\r\n      counter7++;\r\n      if(dice1 === 6 || dice2 === 6){\r\n          six7 ++;\r\n      }\r\n      prob7 =six7 / counter7;\r\n  }\r\n  if(SumofDice === 8){\r\n      counter8++;\r\n      if(dice1 ===6 || dice2 ===6){\r\n          six8++;\r\n      }\r\n   prob8 = six8/ counter8;\r\n  }\r\n  if(SumofDice === 9){\r\n      counter9++;\r\n      if(dice1 === 6 || dice2 ===6){\r\n          six9 ++ ;\r\n      }\r\n  prob9 = six9/ counter9;\r\n  }\r\n  if(SumofDice === 10){\r\n      counter10++;\r\n      if(dice1 ===6 || dice2 === 6){\r\n          six10++;\r\n      }\r\n      prob10 = six10 / counter10;\r\n  }\r\n  if (SumofDice === 11){\r\n      counter11++;\r\n      if(dice1 ===6 || dice2=== 6){\r\n          six11 ++;\r\n      }\r\n      prob11 = six11/counter11;\r\n  }\r\n  if(SumofDice === 12){\r\n      counter12 ++;\r\n      if(dice1 ===6 || dice2 ===6){\r\n          six12 ++;\r\n      }\r\n      prob12 = six12/counter12;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//--------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//----------------Case-------------------------\r\nconsole.log(\"2: \" + prob2);\r\nconsole.log(\"3: \" + prob3);\r\nconsole.log(\"4: \" + prob4);\r\nconsole.log(\"5: \" + prob5);\r\nconsole.log(\"6: \" + prob6);\r\nconsole.log(\"7: \" + prob7);\r\nconsole.log(\"8: \" + prob8);\r\nconsole.log(\"9: \" + prob9);\r\nconsole.log(\"10: \" + prob10);\r\nconsole.log(\"11: \" + prob11);\r\nconsole.log(\"12: \" + prob12);\r\nconsole.log(\"Total Value: \"+prob2+prob3+prob4+prob5+prob6+prob7+ prob8+ prob9+ prob10+ prob11+prob12);\r\nconsole.log((prob2+prob3+prob4+prob5+prob6+prob7+ prob8+ prob9+ prob10+ prob11+prob12)/12);\r\n//---------------------------------------------------------\r\n\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data: {\r\n            labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                datasets: [\r\n                   {\r\n                    data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                    label: \"Expected\",\r\n                    backgroundColor: \"rgb(0, 200, 255)\",\r\n                    borderColor:\"rgb(0, 200, 255)\",\r\n                },\r\n                {\r\n                    data: [prob2,prob3,prob4,prob5,prob6,prob7, prob8, prob9, prob10, prob11,prob12 ],\r\n                    label: 'Experimental',\r\n                    backgroundColor: \"rgb(255,99,71)\",\r\n                    borderColor: \"gray\",\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n            repsonsive:true,\r\n\r\n            tooltips: {\r\n                enabled: false\r\n           },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks:{min:0,max:1, stepSize:.1},\r\n                    beginAtZero:true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Probability',\r\n                  }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Sum',\r\n                      beginAtZero:true\r\n                      \r\n                    }\r\n                  }]\r\n              },\r\n            title: {\r\n                display: true,\r\n                text: 'Dice Rolls',\r\n            }\r\n        }\r\n        \r\n    });\r\n}\r\ncomponentDidMount() {\r\n       \r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                    datasets: [\r\n                    {   \r\n                        data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                        label: \"Expected\",\r\n                        backgroundColor: \"rgb(0, 200, 255)\",\r\n                        borderColor:\"rgb(0, 200, 255)\",\r\n                    },\r\n                    {\r\n                        label: 'Experimental',\r\n                        backgroundColor: \"rgb(255,99,71)\",\r\n                        borderColor: \"gray\",\r\n                        data: []\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                repsonsive:true,\r\n                tooltips: {\r\n                    enabled: false\r\n               },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks:{min:0,max:1, stepSize:.1},\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Probability',\r\n                        beginAtZero:true\r\n                      }\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Sum',\r\n                          beginAtZero:true\r\n                        }\r\n                      }]\r\n                  }     ,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dice Rolls',\r\n                    \r\n                }\r\n            }\r\n            \r\n        });\r\n    }\r\n   render(){\r\n       return(\r\n            <div className = \"Data\">\r\n               <Container>\r\n                   <Row>\r\n                       <Col >\r\n                            <TableStats \r\n                            two={prob2}\r\n                            three={prob3}\r\n                            four={prob4}\r\n                            five={prob5}\r\n                            six={prob6}\r\n                            seven={prob7}\r\n                            eight={prob8}\r\n                            nine={prob9}\r\n                            ten={prob10}\r\n                            eleven={prob11}\r\n                            twelve={prob12} />\r\n                        </Col>\r\n                        <Col >\r\n                            <p>Current Dice Rolls: {this.state.roll}</p>\r\n                            <canvas height=\"300\" id=\"myChart\" ref={this.chartRef} />\r\n                            <Button className = \"mt-3\" onClick={this.buttonRollHundredHandler} block variant = \"primary\">Roll 100 Times</Button>\r\n                            <Button className = \"mt-3\" onClick={this.buttonRollThouHandler} block variant = \"primary\">Roll 1000 Times</Button>\r\n                            <Button className = \"mt-3\" onClick={this.buttonRollTenThousHandler} block variant = \"primary\">Roll 10000 Times</Button>\r\n                        </Col>\r\n                   </Row>\r\n               </Container>\r\n            </div>\r\n       )\r\n   }\r\n}\r\nexport default Data","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Data from './Data';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\"}\r\n\r\nfunction Calculate(){\r\n    return(\r\n        <div className = \"Calculate\">\r\n\r\n            <Card style = {cardStyle}>\r\n                <Card.Body>\r\n                    <h2>Calculate</h2>\r\n                    <Data />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculate","import React from 'react'\r\nimport {Table} from 'react-bootstrap';\r\n\r\n\r\nconst Excel = (props) =>{\r\n    return(\r\n        <div>\r\n            <h2>{props.value}</h2>\r\n            <Table hover bordered striped>\r\n                <caption>Table {props.caption}</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rolls</th>\r\n                        <th>Average of {props.headingOne}</th>\r\n                        <th>Variance of {props.headingTwo}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>10,000</td>\r\n                        <td>{props.one}</td>\r\n                        <td>{props.two}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>50,000</td>\r\n                        <td>{props.three}</td>\r\n                        <td>{props.four}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>100,000</td>\r\n                        <td>{props.five}</td>\r\n                        <td>{props.six}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>250,000</td>\r\n                        <td>{props.seven}</td>\r\n                        <td>{props.eight}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>500,000</td>\r\n                        <td>{props.nine}</td>\r\n                        <td>{props.ten}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>750,000</td>\r\n                        <td>{props.eleven}</td>\r\n                        <td>{props.twelve}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>1,000,000</td>\r\n                        <td>{props.thirteen}</td>\r\n                        <td>{props.fourteen}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\nexport default Excel","import React from 'react'\r\nimport {Card, Container, Row, Col} from 'react-bootstrap'\r\nimport Excel from './Excel'\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\",\r\n    \r\n  }\r\n\r\nconst Tables = () =>{\r\n    return(\r\n        <div className =\"Tables\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                    <Card style={cardStyle}>\r\n                        <Card.Body>\r\n                            <Excel  \r\n                                    value=\"\"\r\n                                    caption=\"1\"\r\n                                    headingOne=\"P(X_1+X_2=i)\"\r\n                                    headingTwo=\"P(X_1+X_2=i)\"\r\n                                    //-----------Row 1------------\r\n                                    one=\"7.007\"\r\n                                    two=\"4.879\"\r\n                                    //-------------------------------\r\n                                    //-----------Row 2---------------\r\n                                    three=\"7.00364\"\r\n                                    four=\"4.8353\"\r\n                                    //-------------------------------\r\n                                    five=\"7.00326\"\r\n                                    six=\"4.8289\"\r\n                                    seven=\"7.00216\"\r\n                                    eight=\"4.82917\"\r\n                                    nine=\"6.996546\"\r\n                                    ten=\"4.838226\"\r\n                                    eleven=\"6.9987773\"\r\n                                    twelve=\"4.82777\"\r\n                                    thirteen=\"\"\r\n                                    fourteen=\"\"/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                                \r\n                    </Col>\r\n                </Row>\r\n                <Row className = \"mt-3\">\r\n                    <Col>\r\n                    <Card style={cardStyle}>\r\n                            <Card.Body>\r\n                                <Excel\r\n                                caption=\"2\" \r\n                                headingOne=\"P(Z=6|i)*P(i)\"\r\n                                headingTwo=\"P(Z=6|i)*P(i)\"\r\n                                //-----------Row 1------------\r\n                                one=\"%\"\r\n                                two=\"%\"\r\n                                //-------------------------------\r\n                                //-----------Row 2---------------\r\n                                three=\"%\"\r\n                                four=\"%\"\r\n                                //-------------------------------\r\n                                five=\"\"\r\n                                six=\"\"\r\n                                seven=\"\"\r\n                                eight=\"\"\r\n                                nine=\"\"\r\n                                ten=\"\"\r\n                                eleven=\"\"\r\n                                twelve=\"\"\r\n                                thirteen=\"\"\r\n                                fourteen=\"\"\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className = \"mt-3 mb-4\">\r\n                    <Col>  \r\n                    <Card style={cardStyle}>\r\n                            <Card.Body>\r\n                                <Excel\r\n                                caption=\"3\"\r\n                                headingOne=\"P(Z=6)\"\r\n                                headingTwo=\"P(Z=6)\"\r\n                                //-----------Row 1------------\r\n                                one=\"30.64%\"\r\n                                two=\"%\"\r\n                                //-------------------------------\r\n                                //-----------Row 2---------------\r\n                                three=\"30.73%\"\r\n                                four=\"%\"\r\n                                //-------------------------------\r\n                                five=\"30.48%\"\r\n                                six=\"\"\r\n                                seven=\"30.68%\"\r\n                                eight=\"\"\r\n                                nine=\"30.49%\"\r\n                                ten=\"\"\r\n                                eleven=\"30.56%\"\r\n                                twelve=\"\"\r\n                                thirteen=\"30.56%\"\r\n                                fourteen=\"\"\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n         \r\n\r\n         \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Tables","import React from 'react';\r\nimport { Col, Row, Container} from 'react-bootstrap';\r\nimport Question from './Question';\r\nimport Calculate from './Calculate';\r\nimport Tables from './dice/Tables';\r\n\r\nfunction Dice(){\r\n    return(\r\n        <div className = \"Dice\">\r\n            <Container>\r\n                <Row className = \"mb-3\">\r\n                    <Col lg={12}><Question/></Col>\r\n                </Row>\r\n              <Row className = \"mb-4\">\r\n                    <Col lg={12}><Calculate /></Col>\r\n                </Row> \r\n                <Row>\r\n                    <Col><Tables/></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )}\r\nexport default Dice","import React from 'react';\r\nimport {Card} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\"}\r\n    const faStyleDice = {fontSize: \"4em\", color: \"crimson\"}\r\nconst SectionOne = () =>{\r\n    return(\r\n        <div className = \"SectionOne\">\r\n            <Card style = {cardStyle}>\r\n                <Card.Body>\r\n                    <h2>The Experiment</h2>\r\n                   \r\n                    <p>In order to get a better \r\n                        understanding of the type of \r\n                        data this question \r\n                    can generate, our team created a \r\n                    program to record every \r\n                    aspect of the experiment.\r\n                    The program loops at the current default state of 10. React.js specializes \r\n                    in state management.\r\n                    With the buttons underneath the graph labeled:\r\n                    \r\n                    <ul className = \"text-left mt-3\">\r\n                        <li>Roll 100 Times</li>\r\n                        <li>Roll 1000 Times</li>\r\n                        <li>Roll 10000 Times</li>\r\n                    </ul>\r\n                    \r\n                    The number of times the loop is executed is determined by its state.\r\n                    With the click of each button, the value it consists \r\n                    of can either by 100, 1000, 10000, thus\r\n                    relating to the amount of times the loop can execute. \r\n                    Would also translate to the amount of rolls it executes.\r\n                    \r\n                    We created two random generators ranging between 1-6. \r\n                    The number is then assigned to a \r\n                    variable. With every click of the button \r\n                    our “dice” would display the number we rolled and their sum. \r\n                    The program must be keeping \r\n                    track of the amount of times that a sum was rolled. Here they refer \r\n                    to the sum as i .\r\n                    It is important to keep track of the amount of times a specific value of \r\n                    i appears to \r\n                    calculate the probability of a 6 being \r\n                    rolled for that i  moving forward.</p>\r\n                    <br/>\r\n                    <p><i style={faStyleDice} class=\"fas fa-dice fa-lg\"></i></p>\r\n                    <br/>\r\n                    <p>For all values of i <strong>&lt; 7</strong> the probability of a six being rolled will remain at 0 ,trivially.\r\n                    For i ≥ 7, the way that the probability is calculated is that the program will keep tally how many times a specified \r\n                    value of i appears. Because it takes two dice to produce the sum, each roll will add two possibilities for the six to appear. \r\n                    Thus, our algorithm to calculate the probability that at least one of the dice lands on a six is to divide the amount of times a \r\n                    6 appears on a roll for a specified i by the number of all times i has appeared multiplied by two (accounting for each of the dice.) </p>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionOne","import React from 'react';\r\nimport {Card} from 'react-bootstrap'\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\"}\r\n    \r\n\r\n    const faStyleDiceSix = {fontSize: \"4em\", color: \"rgb(0, 168, 107)\"}\r\n\r\n\r\nconst SectionTwo = () =>{\r\n    return(\r\n        <div className = \"SectionTwo\">\r\n            <Card style = {cardStyle}>\r\n                <Card.Body>\r\n                    <h2>Theory</h2>\r\n                    <p>It is known that the sum of rolling two fair dice \r\n                yields a finite set of possibilities. \r\n                The smallest sum two dice \r\n                can roll is a two and the largest being a 12. \r\n                This projected through an experiment will produce a variety of \r\n                outcomes versus the expected frequency of each sum. </p>\r\n                <p>But taking it a step further, we are interested in the \r\n                frequency of a single value from either of the two dice. </p>\r\n                <p><i style={faStyleDiceSix} class=\"fas fa-dice-six\"></i></p>\r\n                <p>\r\n                    \r\n                In particular, we are observing the amount of times a six was rolled \r\n                from either dice to contribute to the two dice sum \r\n                versus the total number of times that sum was achieved. </p>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionTwo","import React from 'react';\r\nimport {Card, Col, Row, Container, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px black\"}\r\n\r\n    const faStyleJS = {fontSize: \"4em\", color: \"gold\"}\r\n    const faStyleReact = {fontSize: \"4em\", color: \"#15aabf\"}\r\n    const faStyleHtml = {fontSize: \"4em\", color: \"Tomato\"}\r\n    const faStyleCSS = {fontSize: \"4em\", color: \"#3299CC\"}\r\n    \r\n\r\nconst SectionThree = () =>{\r\n    return(\r\n        <div className = \"SectionThree\">\r\n           <Card style = {cardStyle}>\r\n                <Card.Body>\r\n                    <h2>About</h2>\r\n\r\n                    <p>In conclusion, this project demonstrates how expected values are not achieved in the dynamic nature of an experiment. We are concerned \r\n                with a six arising, but there are other events simultaneously occurring influencing the outcome of the data. In essence, we are working \r\n                with the conditional probability that a six dealt. Why conditional? Well in order for a six to even be possible, the sum has to be greater than 6 itself. \r\n                Secondly, there are different combinations to achieve a sum. These two components are what govern the outcomes of our data. \r\n            </p>\r\n\r\n                        <span style= {faStyleReact}><i className=\"fab fa-react mr-2\"></i></span>       \r\n                        <span style = {faStyleHtml}><i class=\"fab fa-html5 mr-2\"></i></span>\r\n                        <span style = {faStyleCSS}><i class=\"fab fa-css3-alt mr-2\"></i></span>\r\n                        <span style = {faStyleJS}><i class=\"fab fa-js-square mr-2 ml-2\"></i></span>\r\n                        <Col><Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link></Col>\r\n                 \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionThree","import React from 'react';\r\nimport {Card, Button, Row, Col, Container} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport diceimg from '../images/dicesm.jpg'\r\nimport SectionOne from './about/SectionOne'\r\nimport SectionTwo from './about/SectionTwo'\r\nimport SectionThree from './about/SectionThree'\r\n  \r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px darkgray\"}\r\n\r\n\r\nfunction About(){\r\n    return(\r\n        <div className = \"about lead\">\r\n            <Container>\r\n                <Row className =\"mt-3\"><Col lg={12}><SectionOne/></Col></Row>\r\n                <Row className =\"mt-3\"><Col lg={12}><SectionTwo/></Col> </Row>\r\n                <Row className =\"mt-3 mb-5\"><Col lg={12}><SectionThree/></Col></Row>                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\nimport Home from './components/Home';\r\nimport './App.css';\r\nimport { Route, Switch, HashRouter} from 'react-router-dom';\r\nimport Dice from './components/Dice';\r\nimport About from './components/About';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className = \"Title\">\r\n \r\n      <HashRouter>\r\n      <Switch>\r\n      <Route exact from ={\"/\"} component = {Home}></Route>\r\n\r\n      <Route path = {\"/dice\"} component = {Dice}></Route>\r\n      <Route path = {\"/about\"} component = {About}></Route>\r\n\r\n      </Switch>\r\n      </HashRouter>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}