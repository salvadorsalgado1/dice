{"version":3,"sources":["components/Home.js","components/Question.js","components/Data.js","components/Calculate.js","components/Graph.js","components/Dice.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["cardStyle","width","justifyContent","boxShadow","Home","className","Card","style","Body","to","Button","variant","React","Component","Question","Data","state","value","probability","output","buttonIncrementHandler","event","setState","buttonDeIncrementHandler","this","toFixed","onClick","block","Calculate","Graph","chartRef","createRef","myChartRef","current","getContext","Chart","type","data","labels","datasets","label","backgroundColor","options","id","ref","Dice","Container","Row","Col","xs","sm","faStyleJS","fontSize","color","faStyleReact","faStyleHtml","faStyleCSS","About","class","App","exact","from","component","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb6d1308.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"5px 4px 3px black\"\r\n    \r\n  }\r\nclass Home extends React.Component{\r\n  render(){\r\n      return(\r\n          <div className = \"Title\">\r\n            <Card style = {cardStyle}>\r\n\r\n            <Card.Body>\r\n                <p className = \"lead\"><strong>Statistics and Probability</strong></p>\r\n                <p className = \"lead\">Spring 2020</p>\r\n                <p className = \"lead\">Members</p>\r\n          \r\n            <Link to = \"/dice\"><Button variant = \"primary mr-4\">Project</Button></Link>\r\n            <Link to = \"/about\"><Button variant = \"secondary\">About</Button></Link>\r\n\r\n\r\n            </Card.Body>\r\n            </Card>\r\n\r\n                      </div>\r\n      )\r\n       \r\n      \r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Question(){\r\n    return(\r\n        <div className = \"Question\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3>Project</h3>\r\n                    <p className = \"lead\">\r\n                    <strong>Question:</strong>&nbsp; \r\n                    What is the probability that at least \r\n                    one pair <br/> of fair Dice lands on 6,\r\n                    given that the sum of the Dice <br/> is \r\n                    i, i = 2, 3, â€¦, 12?\r\n                    </p>\r\n                    <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","// Calculations will go here\r\nimport React from 'react';\r\n\r\nimport { Button} from 'react-bootstrap';\r\n\r\n\r\nclass Data extends React.Component{\r\nstate = {\r\n    value: 1,\r\n    probability: 1,\r\n    output:1\r\n}\r\n\r\nbuttonIncrementHandler = (event) =>{\r\nthis.setState({value: this.state.value + 1});\r\nthis.setState({output: (this.state.value + 1)/12});\r\n\r\n}\r\nbuttonDeIncrementHandler = (event) =>{\r\n    this.setState({value: this.state.value - 1});\r\nthis.setState({output: (this.state.value - 1)/12});\r\n}\r\n\r\n\r\n\r\n\r\n   render(){\r\n       return(\r\n            <div className = \"Data\">\r\n            <p>Number of Dice: {this.state.value}</p> \r\n            <p>Probability: {this.state.output.toFixed(3)}</p>\r\n            <Button onClick = {this.buttonIncrementHandler} block variant = \"success\">+</Button>\r\n            <Button onClick = {this.buttonDeIncrementHandler} block variant = \"primary\">-</Button>\r\n           </div>\r\n       )\r\n   }\r\n}\r\nexport default Data","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport Data from './Data';\r\n\r\nfunction Calculate(){\r\n    return(\r\n        <div className = \"Calculate\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3>Calculate</h3>\r\n\r\n\r\n                    <Data />\r\n\r\n                   \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculate","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Chart from \"chart.js\";\r\n\r\n\r\n\r\n\r\nclass Graph extends React.Component{\r\n    chartRef = React.createRef();\r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"doughnut\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"March\", \"April\", \"May\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Sales\",\r\n                        data: [84, 32, 91, 10, 100],\r\n                        backgroundColor: [\"yellow\" , \"dodgerblue\", \"orange\", \"lightpurple\", \"pink\"] \r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n         return(\r\n    <div className = \"graph\">\r\n        <Card>\r\n            <Card.Body>\r\n                <canvas\r\n                  \r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    </div>\r\n    )\r\n    }\r\n   \r\n}\r\n\r\nexport default Graph","import React from 'react';\r\nimport {Card, Button, Col, Row, Container} from 'react-bootstrap';\r\nimport Question from './Question';\r\nimport Calculate from './Calculate';\r\nimport Graph from './Graph';\r\n\r\n\r\nfunction Dice(){\r\n    return(\r\n        <div className = \"Dice\">\r\n<Container>\r\n    <Row className = \"mb-3\">\r\n        <Col xs = \"12\" sm = \"12\"><Question /></Col>\r\n        \r\n    </Row>\r\n    <Row>\r\n        <Col xs = \"12\" sm = \"6\"><Calculate/></Col>\r\n        <Col xs = \"12\" sm = \"6\"><Graph/></Col>\r\n        \r\n    </Row>\r\n    \r\n</Container>\r\n\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dice","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px lightgray\"}\r\nconst faStyleJS = {fontSize: \"4em\", color: \"gold\"}\r\nconst faStyleReact = {fontSize: \"4em\", color: \"#15aabf\"}\r\nconst faStyleHtml = {fontSize: \"4em\", color: \"Tomato\"}\r\nconst faStyleCSS = {fontSize: \"4em\", color: \"#3299CC\"}\r\n\r\nfunction About(){\r\n    return(\r\n        <div className = \"about\">\r\n<Card style = {cardStyle}>\r\n    <Card.Body>\r\n        <h2>About</h2>\r\n        <p>\r\n        <span style = {faStyleJS}><i class=\"fab fa-js-square mr-2 ml-2\"></i></span>\r\n        <span style= {faStyleReact}><i className=\"fab fa-react mr-2\"></i></span>       \r\n        <span style = {faStyleHtml}><i class=\"fab fa-html5 mr-2\"></i></span>\r\n        <span style = {faStyleCSS}><i class=\"fab fa-css3-alt mr-2\"></i></span>\r\n        </p>\r\n        <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n    </Card.Body>\r\n</Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\nimport Home from './components/Home';\nimport './App.css';\nimport { Route, Switch, HashRouter} from 'react-router-dom';\nimport Dice from './components/Dice';\nimport About from './components/About';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = \"Title\">\n \n      <HashRouter>\n      <Switch>\n      <Route exact from ={\"/\"} component = {Home}></Route>\n\n      <Route path = {\"/dice\"} component = {Dice}></Route>\n      <Route path = {\"/about\"} component = {About}></Route>\n\n      </Switch>\n      </HashRouter>\n     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}