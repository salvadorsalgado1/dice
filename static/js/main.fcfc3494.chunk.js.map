{"version":3,"sources":["components/Home.js","components/Question.js","components/Data.js","components/Calculate.js","components/TableStats.js","components/Dice.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["cardStyle","width","justifyContent","boxShadow","Home","className","Card","style","Body","to","Button","variant","React","Component","Question","seven","eight","nine","ten","eleven","twelve","sumRandDice","dice","count_6","count_total","Data","chartRef","createRef","state","value","probability","output","label","data","labels","datasets","buttonIncrementHandler","event","myChartRef","setState","buttonDeIncrementHandler","i","push","Math","floor","random","add","console","log","length","this","current","getContext","Chart","type","backgroundColor","borderColor","options","scales","yAxes","ticks","min","max","stepSize","beginAtZero","scaleLabel","display","labelString","xAxes","title","text","height","id","ref","onClick","block","Calculate","prob","sum","j","toFixed","TableStats","Table","striped","bordered","hover","Dice","Container","Row","Col","faStyleJS","fontSize","color","faStyleReact","faStyleHtml","faStyleCSS","About","class","App","exact","from","component","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fcfc3494.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"5px 4px 3px black\"\r\n  }\r\n  \r\nclass Home extends React.Component{\r\n  render(){\r\n      return(\r\n          <div className = \"Title\">\r\n            <Card style = {cardStyle}>\r\n              <Card.Body>\r\n                  <p className = \"lead\"><strong>Statistics and Probability</strong></p>\r\n                  <p className = \"lead\">Math 352</p>\r\n                  <p className = \"lead\">Spring 2020</p>\r\n                  <hr></hr>\r\n                  <p className = \"lead\">Daniel Ramirez</p>\r\n                  <p className = \"lead\">Juan Zarate</p>\r\n                  <p className = \"lead\">Salvador Salgado</p>\r\n                  <hr></hr>\r\n                  <Link to = \"/dice\"><Button variant = \"primary mr-4\">Project</Button></Link>\r\n                  <Link to = \"/about\"><Button variant = \"secondary\">About</Button></Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"5px 4px 3px black\"\r\n  }\r\n\r\nfunction Question(){\r\n    return(\r\n        <div className = \"Question\" style = {cardStyle}>\r\n            <Card className = \"w-100\">\r\n                <Card.Body>\r\n                    <h3>Project</h3>\r\n                    <p className = \"lead\">\r\n                    <strong>Question:</strong>&nbsp; \r\n                    What is the probability that at least \r\n                    one pair <br/> of fair Dice lands on 6,\r\n                    given that the sum of the Dice <br/> is \r\n                    i, i = 2, 3, â€¦, 12?\r\n                    </p>\r\n                    <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","// Calculations will go here\r\nimport React from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport Chart from \"chart.js\";\r\n//import Sum from './Sum';\r\n\r\n    \r\n    let sumRandDice = [];//= diceRandOne + diceRandTwo;\r\n    let dice = [];\r\n    let count_6 = 0;\r\n    let count_total = 0;\r\n    let seven;\r\n    let eight;\r\n    let nine;\r\n    let ten;\r\n    let eleven;\r\n    let twelve;\r\nfunction probability() {\r\n     //---------------------------------------------\r\n    \r\n\r\n\r\n}\r\n       \r\n\r\n\r\nclass Data extends React.Component{\r\n  \r\n    chartRef = React.createRef();\r\n    state = {\r\n        value: 1,\r\n        probability: 1,\r\n        output:1,\r\n        chartRef:null,\r\n        label:\"Expected\",\r\n        data: {\r\n                labels: [\"1\",\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\r\n                datasets:{   \r\n                            data: [1,2,3,4,5,6,7,8,9],\r\n                        }},\r\n    }\r\n\r\nbuttonIncrementHandler = (event, myChartRef) =>{\r\n    this.setState({value: this.state.value + 1});\r\n    this.setState({output: (this.state.value + 1)/12});\r\n   // dice();\r\n   \r\n}\r\n\r\nbuttonDeIncrementHandler = (event) =>{\r\nthis.setState({value: this.state.value - 1});\r\nthis.setState({output: (this.state.value - 1)/12});\r\n}\r\ncomponentDidUpdate() {\r\n\r\n\r\n  \r\n//-----------------------------------------------------\r\n\r\nfor(let i = 0; i < 100; i++){\r\n  dice.push(Math.floor((Math.random()*6)+1));\r\n}\r\nfor(let i = 0; i< 50; i++){\r\n  let add = dice[2*i] + dice[2*i+1];\r\n  sumRandDice.push(add);\r\n}\r\n\r\n//dice[], consists of random values rolled 100 times, or two dice being rolled 50 times.\r\n//sumRandDice[], consists of 2k and 2k+1 index values being added together. \r\nconsole.log(sumRandDice.length);\r\nconsole.log(\"Dice Array: \" + dice);\r\nconsole.log(\"SumRandDice : \" + sumRandDice);\r\n\r\nfor(let i = 0; i < 50; i++){\r\n  if(sumRandDice[i] >= 7){\r\n        if(sumRandDice[i] == 7){\r\n              if(dice[2*i] == 6 || dice[2*i+1] == 6)\r\n              {\r\n                    count_6++;\r\n                    count_total++;\r\n              }\r\n              else\r\n              {\r\n                    count_total++;\r\n              }\r\n              seven = count_6/count_total;\r\n              console.log(\"Seven: \"+seven);\r\n        }\r\n        else if(sumRandDice[i] == 8){\r\n              if(dice[2*i] == 6 || dice[2*i+ 1] == 6)\r\n              {\r\n                count_6++;\r\n                count_total++;\r\n              }\r\n              else\r\n              {\r\n                count_total++;\r\n              }\r\n              eight= count_6/count_total;\r\n              console.log(eight);\r\n\r\n        }else if(sumRandDice[i] == 9){\r\n          if(dice[2*i] == 6 || dice[2*i+ 1] == 6)\r\n          {\r\n            count_6++;\r\n            count_total++;\r\n          }\r\n          else\r\n          {\r\n            count_total++;\r\n          }\r\n          nine = count_6/count_total;\r\n          console.log(nine);\r\n\r\n    }else if(sumRandDice[i] == 10){\r\n      if(dice[2*i] == 6 || dice[2*i+ 1] == 6)\r\n      {\r\n        count_6++;\r\n        count_total++\r\n      }\r\n      else\r\n      {\r\n        count_total++;\r\n      }\r\n      ten = count_6/count_total\r\n      console.log(ten);\r\n    }else if(sumRandDice[i] == 11){\r\n      if(dice[2*i] == 6 || dice[2*i+ 1] == 6)\r\n      {\r\n        count_6++\r\n        count_total++;\r\n      }\r\n      else\r\n      {\r\n        count_total++;\r\n      }\r\n      eleven=count_6/count_total;\r\n      console.log(eleven);\r\n    }else if(sumRandDice[i] == 12){\r\n      if(dice[2*i] == 6 || dice[2*i+ 1] == 6)\r\n      { \r\n        count_6++;\r\n        count_total++;\r\n      }\r\n      else\r\n      {\r\n        count_total++;\r\n      }\r\n        twelve=count_6/count_total;\r\n        console.log(twelve);\r\n    }   \r\n  }\r\n  else\r\n  {\r\n        console.log(\"less than 7\")\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------\r\n\r\n\r\n\r\nlet diceRandom = [];\r\n// 3 , 5 = 8\r\n\r\n    \r\n    \r\n   \r\n//---------------------------------------------------------\r\n\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data: {\r\n            labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                datasets: [\r\n                   {\r\n                    data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                    label: this.state.label,\r\n                    backgroundColor: \"rgb(0, 200, 255)\",\r\n                    borderColor:\"rgb(0, 200, 255)\",\r\n                },\r\n                {\r\n                    data: [0,0,0,0,0,seven, eight, nine, ten, eleven,twelve ],\r\n                    label: 'Probability',\r\n                    backgroundColor: \"rgb(255,99,71)\",\r\n                    borderColor: \"gray\",\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks:{min:0,max:1.5, stepSize:.1},\r\n                    beginAtZero:true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Probability',\r\n                  }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Sum',\r\n                      beginAtZero:true\r\n                      \r\n                    }\r\n                  }]\r\n              },\r\n            title: {\r\n                display: true,\r\n                text: 'Dice Rolls',\r\n            }\r\n        }\r\n        \r\n    });\r\n}\r\ncomponentDidMount() {\r\n        console.log(\"Component did mount\");\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                    datasets: [\r\n                    {   \r\n                        data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                        label: this.state.label,\r\n                        backgroundColor: \"rgb(0, 200, 255)\",\r\n                        borderColor:\"rgb(0, 200, 255)\",\r\n                    },\r\n                    {\r\n                        label: 'Probability',\r\n                        backgroundColor: \"rgb(255,99,71)\",\r\n                        borderColor: \"gray\",\r\n                        data: []\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              \r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks:{min:0,max:1.5, stepSize:.1},\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Probability',\r\n                        beginAtZero:true\r\n                      }\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Sum',\r\n                          beginAtZero:true\r\n                        }\r\n                      }]\r\n                  }     ,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dice Rolls',\r\n                    \r\n                }\r\n            }\r\n            \r\n        });\r\n    }\r\n   render(){\r\n       return(\r\n            <div className = \"Data\">\r\n                {/* <p>Number of Dice: {this.state.value}</p> */}\r\n     \r\n                {/* <p>Probability: {this.state.output.toFixed(3)}</p>*/}\r\n                <canvas width = \"400\" height = \"400\" id=\"myChart\" ref={this.chartRef} />\r\n                <Button className = \"mt-4\" onClick = {this.buttonIncrementHandler} block variant = \"primary\">Roll</Button>\r\n            </div>\r\n       )\r\n   }\r\n}\r\nexport default Data","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Data from './Data';\r\n\r\n\r\n\r\nfunction Calculate(){\r\n    return(\r\n        <div className = \"Calculate\">\r\n\r\n            <Card className = \"w-100\">\r\n                <Card.Body>\r\n                    <h2>Calculate</h2>\r\n                    <Data />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculate","import React from 'react';\r\nimport {Card, Table} from 'react-bootstrap';\r\nlet prob = [];\r\nfunction probability(sum) {\r\n    let i = 1, j = 1;\r\n    let count_6 = 0;\r\n    let count_total = 0;\r\n      if (sum < 6 || sum > 12) {return 0}\r\n    \r\n        for(i = 1; i <= 6; i++) \r\n        {\r\n          for(j = 1; j<= 6; j++) {\r\n            if(i+j == sum) {\r\n              count_total++;\r\n            if (i == 6 || j == 6) {\r\n              count_6++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n    if(count_6 == 0){\r\n    return 0;   \r\n     }\r\n     return count_6/count_total.toFixed(3);\r\n     \r\n    }\r\n      for(let i = 2; i <= 12; i++) {\r\n      //probability(4);\r\n      console.log(\" when sum is\" + i + \" is:\"+ probability(i).toFixed(3));\r\n      prob.push(probability(i).toFixed(3));\r\n    }\r\n\r\nconsole.log(prob);\r\n//2: 0\r\n//3: 0\r\n//4: 0\r\n//5: 0\r\n//6: 0\r\n//7: .3333\r\n//8: .400\r\n//9: .500\r\n//10: .667\r\n//11: 1.00\r\n//12: 1.00\r\n\r\n\r\nconst TableStats = () =>\r\n{\r\n    return(\r\n        <div className = \"table\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2>Table</h2>\r\n                        <Table striped bordered hover>\r\n                            \r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sum</th>\r\n                                    <th>Probability</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>2</td>\r\n                                    <td>{prob[0]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>{prob[1]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>4</td>\r\n                                    <td>{prob[2]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>5</td>\r\n                                    <td>{prob[3]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>6</td>\r\n                                    <td>{prob[4]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>7</td>\r\n                                    <td>{prob[5]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>8</td>\r\n                                    <td>{prob[6]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>9</td>\r\n                                    <td>{prob[7]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>10</td>\r\n                                    <td>{prob[8]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>11</td>\r\n                                    <td>{prob[9]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>12</td>\r\n                                    <td>{prob[10]}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableStats","import React from 'react';\r\nimport { Col, Row, Container} from 'react-bootstrap';\r\nimport Question from './Question';\r\nimport Calculate from './Calculate';\r\n\r\nimport TableStats from './TableStats';\r\n\r\nconst cardStyle = {\r\n    width:\"18rem;\"\r\n}\r\n\r\nfunction Dice(){\r\n    return(\r\n        <div className = \"Dice\">\r\n            <Container>\r\n                <Row className = \"mb-3\"><Col><Question style = {cardStyle}/></Col></Row>\r\n                <Row className = \"mb-3\">\r\n                    <Col><TableStats/></Col>\r\n                    <Col><Calculate style = {cardStyle}/></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )}\r\nexport default Dice","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px lightgray\"}\r\nconst faStyleJS = {fontSize: \"4em\", color: \"gold\"}\r\nconst faStyleReact = {fontSize: \"4em\", color: \"#15aabf\"}\r\nconst faStyleHtml = {fontSize: \"4em\", color: \"Tomato\"}\r\nconst faStyleCSS = {fontSize: \"4em\", color: \"#3299CC\"}\r\n\r\nfunction About(){\r\n    return(\r\n        <div className = \"about\">\r\n<Card style = {cardStyle}>\r\n    <Card.Body>\r\n        <h2>About</h2>\r\n        <p>\r\n        <span style = {faStyleJS}><i class=\"fab fa-js-square mr-2 ml-2\"></i></span>\r\n        <span style= {faStyleReact}><i className=\"fab fa-react mr-2\"></i></span>       \r\n        <span style = {faStyleHtml}><i class=\"fab fa-html5 mr-2\"></i></span>\r\n        <span style = {faStyleCSS}><i class=\"fab fa-css3-alt mr-2\"></i></span>\r\n        </p>\r\n        <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n    </Card.Body>\r\n</Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport Home from './components/Home';\r\nimport './App.css';\r\nimport { Route, Switch, HashRouter} from 'react-router-dom';\r\nimport Dice from './components/Dice';\r\nimport About from './components/About';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className = \"Title\">\r\n \r\n      <HashRouter>\r\n      <Switch>\r\n      <Route exact from ={\"/\"} component = {Home}></Route>\r\n\r\n      <Route path = {\"/dice\"} component = {Dice}></Route>\r\n      <Route path = {\"/about\"} component = {About}></Route>\r\n\r\n      </Switch>\r\n      </HashRouter>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}