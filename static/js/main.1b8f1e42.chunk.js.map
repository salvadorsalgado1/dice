{"version":3,"sources":["components/Home.js","components/Question.js","components/Data.js","components/Calculate.js","components/TableStats.js","components/Dice.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["cardStyle","width","justifyContent","boxShadow","Home","className","Card","style","Body","to","Button","variant","React","Component","Question","diceNums","diceAdd","diceTotal","i","push","Math","floor","random","console","log","sort","a","b","j","Data","chartRef","createRef","state","value","probability","output","label","data","labels","datasets","buttonIncrementHandler","event","myChartRef","setState","buttonDeIncrementHandler","dice","prob","sum","count_6","count_total","toFixed","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Eleven","Twelve","length","this","current","getContext","Chart","type","backgroundColor","borderColor","options","scales","yAxes","ticks","min","max","stepSize","beginAtZero","scaleLabel","display","labelString","xAxes","title","text","height","id","ref","onClick","block","Calculate","TableStats","Table","striped","bordered","hover","Dice","Container","Row","Col","faStyleJS","fontSize","color","faStyleReact","faStyleHtml","faStyleCSS","About","class","App","exact","from","component","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b8f1e42.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"5px 4px 3px black\"\r\n  }\r\n  \r\nclass Home extends React.Component{\r\n  render(){\r\n      return(\r\n          <div className = \"Title\">\r\n            <Card style = {cardStyle}>\r\n              <Card.Body>\r\n                  <p className = \"lead\"><strong>Statistics and Probability</strong></p>\r\n                  <p className = \"lead\">Spring 2020</p>\r\n                  <p className = \"lead\">Members</p>\r\n                  <Link to = \"/dice\"><Button variant = \"primary mr-4\">Project</Button></Link>\r\n                  <Link to = \"/about\"><Button variant = \"secondary\">About</Button></Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"5px 4px 3px black\"\r\n  }\r\n\r\nfunction Question(){\r\n    return(\r\n        <div className = \"Question\" style = {cardStyle}>\r\n            <Card className = \"w-100\">\r\n                <Card.Body>\r\n                    <h3>Project</h3>\r\n                    <p className = \"lead\">\r\n                    <strong>Question:</strong>&nbsp; \r\n                    What is the probability that at least \r\n                    one pair <br/> of fair Dice lands on 6,\r\n                    given that the sum of the Dice <br/> is \r\n                    i, i = 2, 3, â€¦, 12?\r\n                    </p>\r\n                    <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","// Calculations will go here\r\nimport React from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport Chart from \"chart.js\";\r\n//import Sum from './Sum';\r\nlet diceNums = [];\r\nlet diceAdd = [];\r\nlet diceTotal = [];\r\nlet count_6 = 0;\r\nlet count_total = 0;\r\n\r\n\r\n  for(let i = 1; i <= 36; i++){\r\n   diceTotal.push( Math.floor((Math.random()*6)+1)+ Math.floor((Math.random()*6)+1));\r\n  }\r\n  console.log(diceTotal);\r\n  diceTotal.sort(function(a,b){return a-b});\r\n  console.log(\"Sorted Random: \"+diceTotal);\r\n\r\n  for(let i = 1; i<= 6; i++)\r\n  {\r\n      for(let j= 1; j<=6; j++)\r\n      {\r\n\r\n          diceNums.push(\"( \"+ i+\",\"+j+\" )\"+\" => \"+(i+j));\r\n          diceAdd.push(i+j);\r\n      }\r\n  }\r\n\r\n \r\nclass Data extends React.Component{\r\n    chartRef = React.createRef();\r\n    state = {\r\n        value: 1,\r\n        probability: 1,\r\n        output:1,\r\n        chartRef:null,\r\n        label:\"Expected\",\r\n        data: {\r\n                labels: [\"1\",\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\r\n                datasets:{   \r\n                            data: [1,2,3,4,5,6,7,8,9],\r\n                        }},\r\n    }\r\n\r\nbuttonIncrementHandler = (event, myChartRef) =>{\r\n    this.setState({value: this.state.value + 1});\r\n    this.setState({output: (this.state.value + 1)/12});\r\n   // dice();\r\n}\r\n\r\nbuttonDeIncrementHandler = (event) =>{\r\nthis.setState({value: this.state.value - 1});\r\nthis.setState({output: (this.state.value - 1)/12});\r\n}\r\ncomponentDidUpdate() {\r\nlet dice = [];\r\n\r\nfor(let i = 1; i <= 36; i++){\r\n    dice.push( Math.floor((Math.random()*6)+1)+ Math.floor((Math.random()*6)+1));\r\n  \r\n}\r\nlet prob = [];\r\nlet diceRandom = [];\r\n\r\nfunction probability(sum) {\r\n    let i = 1, j = 1;\r\n    let count_6 = 0;\r\n    let count_total = 0;\r\n      if (sum < 6 || sum > 12) {return 0}\r\n        for(i = 1; i <= 6; i++) \r\n        {\r\n          for(j = 1; j<= 6; j++) {\r\n            if(i+j == sum) {\r\n              count_total++;\r\n            if (i == 6 || j == 6) {\r\n              count_6++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n    if(count_6 == 0){\r\n    return 0;   \r\n     }\r\n     return count_6/count_total.toFixed(3);\r\n    }\r\n      for(let i = 2; i <= 12; i++) {\r\n      //probability(4);\r\n      console.log(\" when sum is\" + i + \" is:\"+ probability(i).toFixed(3));\r\n      prob.push(probability(i).toFixed(3));\r\n    }\r\n    console.log(\"Probability in Array \" + prob);\r\n    dice.sort(function(a,b){return a-b});\r\n    console.log(dice);\r\n\r\n    let One = 0;\r\n    let Two = 0;\r\n    let Three = 0;\r\n    let Four = 0;\r\n    let Five = 0;\r\n    let Six = 0;\r\n    let Seven = 0;\r\n    let Eight = 0;\r\n    let Nine = 0;\r\n    let Ten = 0;\r\n    let Eleven = 0;\r\n    let Twelve = 0;\r\n\r\n    for( let i = 0; i < dice.length; i++){\r\n        if(dice[i] === 1){\r\n            One++;\r\n        }else if(dice[i]===2){\r\n            Two++;\r\n        }else if(dice[i] ===3){\r\n            Three++;\r\n        }else if(dice[i] ===4){\r\n            Four++;\r\n        }else if(dice[i] ===5){\r\n            Five++;\r\n        }else if(dice[i]=== 6){\r\n            Six++;\r\n        }else if(dice[i]===7){\r\n            Seven++;\r\n        }else if(dice[i] ===8){\r\n            Eight++;\r\n        }else if(dice[i] ===9){\r\n            Nine++;\r\n        }else if(dice[i] ===10){\r\n            Ten++;\r\n        }else if(dice[i]=== 11){\r\n            Eleven++;\r\n        }else{\r\n            Twelve++;\r\n        }\r\n    }\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data: {\r\n            labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                datasets: [\r\n                   {\r\n                    data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                    label: this.state.label,\r\n                    backgroundColor: \"rgb(0, 200, 255)\",\r\n                    borderColor:\"rgb(0, 200, 255)\",\r\n                },\r\n                {\r\n                    data: [One/12,Two/12,Three/12,Four/12,Five/12,Six/12,Seven/12, Eight/12, Nine/12, Ten/12, Eleven/12, Twelve/12],\r\n                    label: 'Probability',\r\n                    backgroundColor: \"rgb(255,99,71)\",\r\n                    borderColor: \"gray\",\r\n                }\r\n            ]\r\n        },\r\n        options: {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks:{min:0,max:1.5, stepSize:.1},\r\n                    beginAtZero:true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Probability',\r\n                  }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Sum',\r\n                      beginAtZero:true\r\n                      \r\n                    }\r\n                  }]\r\n              },\r\n            title: {\r\n                display: true,\r\n                text: 'Dice Rolls',\r\n            }\r\n            \r\n            //Customize chart options \r\n        }\r\n        \r\n    });\r\n}\r\n\r\ncomponentDidMount() {\r\n        console.log(\"Component did mount\");\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        new Chart(myChartRef, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [2,3,4,5,6,7,8,9,10,11,12],\r\n                    datasets: [\r\n                    {   \r\n                        data: [0, 0, 0, 0, 0, .333, .4, .5, .667, 1.0, 1.0],\r\n                        label: this.state.label,\r\n                        backgroundColor: \"rgb(0, 200, 255)\",\r\n                        borderColor:\"rgb(0, 200, 255)\",\r\n                    },\r\n                    {\r\n                        label: 'Probability',\r\n                        backgroundColor: \"rgb(255,99,71)\",\r\n                        borderColor: \"gray\",\r\n                        data: []\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              \r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks:{min:0,max:1.5, stepSize:.1},\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Probability',\r\n                        beginAtZero:true\r\n                      }\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Sum',\r\n                          beginAtZero:true\r\n\r\n                          \r\n                        }\r\n                      }]\r\n                  }     ,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dice Rolls',\r\n                    \r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n   render(){\r\n       return(\r\n            <div className = \"Data\">\r\n                <p>Number of Dice: {this.state.value}</p> \r\n\r\n                <p>Probability: {this.state.output.toFixed(3)}</p>\r\n                <canvas width = \"400\" height = \"400\" id=\"myChart\" ref={this.chartRef} />\r\n                <Button className = \"mt-4\" onClick = {this.buttonIncrementHandler} block variant = \"primary\">Calculate</Button>\r\n             {/*   <Button onClick = {this.buttonDeIncrementHandler} block variant = \"primary\">-</Button>*/}  \r\n            </div>\r\n       )\r\n   }\r\n}\r\nexport default Data","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Data from './Data';\r\n\r\n\r\n\r\nfunction Calculate(){\r\n    return(\r\n        <div className = \"Calculate\">\r\n\r\n            <Card className = \"w-100\">\r\n                <Card.Body>\r\n                    <h2>Calculate</h2>\r\n                    <Data />\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculate","import React from 'react';\r\nimport {Card, Table} from 'react-bootstrap';\r\nlet prob = [];\r\nfunction probability(sum) {\r\n    let i = 1, j = 1;\r\n    let count_6 = 0;\r\n    let count_total = 0;\r\n      if (sum < 6 || sum > 12) {return 0}\r\n    \r\n        for(i = 1; i <= 6; i++) \r\n        {\r\n          for(j = 1; j<= 6; j++) {\r\n            if(i+j == sum) {\r\n              count_total++;\r\n            if (i == 6 || j == 6) {\r\n              count_6++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n    if(count_6 == 0){\r\n    return 0;   \r\n     }\r\n     return count_6/count_total.toFixed(3);\r\n     \r\n    }\r\n      for(let i = 2; i <= 12; i++) {\r\n      //probability(4);\r\n      console.log(\" when sum is\" + i + \" is:\"+ probability(i).toFixed(3));\r\n      prob.push(probability(i).toFixed(3));\r\n    }\r\n\r\nconsole.log(prob);\r\n//2: 0\r\n//3: 0\r\n//4: 0\r\n//5: 0\r\n//6: 0\r\n//7: .3333\r\n//8: .400\r\n//9: .500\r\n//10: .667\r\n//11: 1.00\r\n//12: 1.00\r\n\r\n\r\nconst TableStats = () =>\r\n{\r\n    return(\r\n        <div className = \"table\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2>Table</h2>\r\n                        <Table striped bordered hover>\r\n                            \r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sum</th>\r\n                                    <th>Probability</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>2</td>\r\n                                    <td>{prob[0]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>{prob[1]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>4</td>\r\n                                    <td>{prob[2]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>5</td>\r\n                                    <td>{prob[3]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>6</td>\r\n                                    <td>{prob[4]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>7</td>\r\n                                    <td>{prob[5]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>8</td>\r\n                                    <td>{prob[6]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>9</td>\r\n                                    <td>{prob[7]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>10</td>\r\n                                    <td>{prob[8]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>11</td>\r\n                                    <td>{prob[9]}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>12</td>\r\n                                    <td>{prob[10]}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableStats","import React from 'react';\r\nimport { Col, Row, Container} from 'react-bootstrap';\r\nimport Question from './Question';\r\nimport Calculate from './Calculate';\r\n\r\nimport TableStats from './TableStats';\r\n\r\nconst cardStyle = {\r\n    width:\"18rem;\"\r\n}\r\n\r\nfunction Dice(){\r\n    return(\r\n        <div className = \"Dice\">\r\n            <Container>\r\n                <Row className = \"mb-3\"><Col><Question style = {cardStyle}/></Col></Row>\r\n                <Row className = \"mb-3\">\r\n                    <Col><TableStats/></Col>\r\n                    <Col><Calculate style = {cardStyle}/></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )}\r\nexport default Dice","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nconst cardStyle = {\r\n    width:\"100%\",\r\n    justifyContent:\"center\",\r\n    boxShadow:\"3px 4px 3px lightgray\"}\r\nconst faStyleJS = {fontSize: \"4em\", color: \"gold\"}\r\nconst faStyleReact = {fontSize: \"4em\", color: \"#15aabf\"}\r\nconst faStyleHtml = {fontSize: \"4em\", color: \"Tomato\"}\r\nconst faStyleCSS = {fontSize: \"4em\", color: \"#3299CC\"}\r\n\r\nfunction About(){\r\n    return(\r\n        <div className = \"about\">\r\n<Card style = {cardStyle}>\r\n    <Card.Body>\r\n        <h2>About</h2>\r\n        <p>\r\n        <span style = {faStyleJS}><i class=\"fab fa-js-square mr-2 ml-2\"></i></span>\r\n        <span style= {faStyleReact}><i className=\"fab fa-react mr-2\"></i></span>       \r\n        <span style = {faStyleHtml}><i class=\"fab fa-html5 mr-2\"></i></span>\r\n        <span style = {faStyleCSS}><i class=\"fab fa-css3-alt mr-2\"></i></span>\r\n        </p>\r\n        <Link to = \"/\"><Button variant = \"secondary\">Home</Button></Link>\r\n    </Card.Body>\r\n</Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport Home from './components/Home';\r\nimport './App.css';\r\nimport { Route, Switch, HashRouter} from 'react-router-dom';\r\nimport Dice from './components/Dice';\r\nimport About from './components/About';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className = \"Title\">\r\n \r\n      <HashRouter>\r\n      <Switch>\r\n      <Route exact from ={\"/\"} component = {Home}></Route>\r\n\r\n      <Route path = {\"/dice\"} component = {Dice}></Route>\r\n      <Route path = {\"/about\"} component = {About}></Route>\r\n\r\n      </Switch>\r\n      </HashRouter>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}